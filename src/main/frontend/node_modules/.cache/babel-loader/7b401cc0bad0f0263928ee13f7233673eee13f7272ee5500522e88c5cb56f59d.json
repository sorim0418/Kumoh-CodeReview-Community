{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHaveClass = toHaveClass;\nvar _utils = require(\"./utils\");\nfunction getExpectedClassNamesAndOptions(params) {\n  var lastParam = params.pop();\n  var expectedClassNames, options;\n  if (typeof lastParam === 'object') {\n    expectedClassNames = params;\n    options = lastParam;\n  } else {\n    expectedClassNames = params.concat(lastParam);\n    options = {\n      exact: false\n    };\n  }\n  return {\n    expectedClassNames: expectedClassNames,\n    options: options\n  };\n}\nfunction splitClassNames(str) {\n  if (!str) {\n    return [];\n  }\n  return str.split(/\\s+/).filter(function (s) {\n    return s.length > 0;\n  });\n}\nfunction isSubset(subset, superset) {\n  return subset.every(function (item) {\n    return superset.includes(item);\n  });\n}\nfunction toHaveClass(htmlElement) {\n  var _this = this;\n  (0, _utils.checkHtmlElement)(htmlElement, toHaveClass, this);\n  for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    params[_key - 1] = arguments[_key];\n  }\n  var _getExpectedClassName = getExpectedClassNamesAndOptions(params),\n    expectedClassNames = _getExpectedClassName.expectedClassNames,\n    options = _getExpectedClassName.options;\n  var received = splitClassNames(htmlElement.getAttribute('class'));\n  var expected = expectedClassNames.reduce(function (acc, className) {\n    return acc.concat(splitClassNames(className));\n  }, []);\n  if (options.exact) {\n    return {\n      pass: isSubset(expected, received) && expected.length === received.length,\n      message: function message() {\n        var to = _this.isNot ? 'not to' : 'to';\n        return (0, _utils.getMessage)(_this, _this.utils.matcherHint(\"\".concat(_this.isNot ? '.not' : '', \".toHaveClass\"), 'element', _this.utils.printExpected(expected.join(' '))), \"Expected the element \".concat(to, \" have EXACTLY defined classes\"), expected.join(' '), 'Received', received.join(' '));\n      }\n    };\n  }\n  return expected.length > 0 ? {\n    pass: isSubset(expected, received),\n    message: function message() {\n      var to = _this.isNot ? 'not to' : 'to';\n      return (0, _utils.getMessage)(_this, _this.utils.matcherHint(\"\".concat(_this.isNot ? '.not' : '', \".toHaveClass\"), 'element', _this.utils.printExpected(expected.join(' '))), \"Expected the element \".concat(to, \" have class\"), expected.join(' '), 'Received', received.join(' '));\n    }\n  } : {\n    pass: this.isNot ? received.length > 0 : false,\n    message: function message() {\n      return _this.isNot ? (0, _utils.getMessage)(_this, _this.utils.matcherHint('.not.toHaveClass', 'element', ''), 'Expected the element to have classes', '(none)', 'Received', received.join(' ')) : [_this.utils.matcherHint(\".toHaveClass\", 'element'), 'At least one expected class must be provided.'].join('\\n');\n    }\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","toHaveClass","_utils","require","getExpectedClassNamesAndOptions","params","lastParam","pop","expectedClassNames","options","concat","exact","splitClassNames","str","split","filter","s","length","isSubset","subset","superset","every","item","includes","htmlElement","_this","checkHtmlElement","_len","arguments","Array","_key","_getExpectedClassName","received","getAttribute","expected","reduce","acc","className","pass","message","to","isNot","getMessage","utils","matcherHint","printExpected","join"],"sources":["/Users/jihyun/Desktop/IdeaProjects/Kumoh-CodeReviewCommunity/src/main/frontend/node_modules/@testing-library/jest-dom/dist/to-have-class.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHaveClass = toHaveClass;\nvar _utils = require(\"./utils\");\nfunction getExpectedClassNamesAndOptions(params) {\n  const lastParam = params.pop();\n  let expectedClassNames, options;\n  if (typeof lastParam === 'object') {\n    expectedClassNames = params;\n    options = lastParam;\n  } else {\n    expectedClassNames = params.concat(lastParam);\n    options = {\n      exact: false\n    };\n  }\n  return {\n    expectedClassNames,\n    options\n  };\n}\nfunction splitClassNames(str) {\n  if (!str) {\n    return [];\n  }\n  return str.split(/\\s+/).filter(s => s.length > 0);\n}\nfunction isSubset(subset, superset) {\n  return subset.every(item => superset.includes(item));\n}\nfunction toHaveClass(htmlElement, ...params) {\n  (0, _utils.checkHtmlElement)(htmlElement, toHaveClass, this);\n  const {\n    expectedClassNames,\n    options\n  } = getExpectedClassNamesAndOptions(params);\n  const received = splitClassNames(htmlElement.getAttribute('class'));\n  const expected = expectedClassNames.reduce((acc, className) => acc.concat(splitClassNames(className)), []);\n  if (options.exact) {\n    return {\n      pass: isSubset(expected, received) && expected.length === received.length,\n      message: () => {\n        const to = this.isNot ? 'not to' : 'to';\n        return (0, _utils.getMessage)(this, this.utils.matcherHint(`${this.isNot ? '.not' : ''}.toHaveClass`, 'element', this.utils.printExpected(expected.join(' '))), `Expected the element ${to} have EXACTLY defined classes`, expected.join(' '), 'Received', received.join(' '));\n      }\n    };\n  }\n  return expected.length > 0 ? {\n    pass: isSubset(expected, received),\n    message: () => {\n      const to = this.isNot ? 'not to' : 'to';\n      return (0, _utils.getMessage)(this, this.utils.matcherHint(`${this.isNot ? '.not' : ''}.toHaveClass`, 'element', this.utils.printExpected(expected.join(' '))), `Expected the element ${to} have class`, expected.join(' '), 'Received', received.join(' '));\n    }\n  } : {\n    pass: this.isNot ? received.length > 0 : false,\n    message: () => this.isNot ? (0, _utils.getMessage)(this, this.utils.matcherHint('.not.toHaveClass', 'element', ''), 'Expected the element to have classes', '(none)', 'Received', received.join(' ')) : [this.utils.matcherHint(`.toHaveClass`, 'element'), 'At least one expected class must be provided.'].join('\\n')\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}