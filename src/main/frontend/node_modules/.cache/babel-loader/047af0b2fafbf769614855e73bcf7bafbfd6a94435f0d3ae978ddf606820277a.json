{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHaveAccessibleName = toHaveAccessibleName;\nvar _domAccessibilityApi = require(\"dom-accessibility-api\");\nvar _utils = require(\"./utils\");\nfunction toHaveAccessibleName(htmlElement, expectedAccessibleName) {\n  var _this = this;\n  (0, _utils.checkHtmlElement)(htmlElement, toHaveAccessibleName, this);\n  var actualAccessibleName = (0, _domAccessibilityApi.computeAccessibleName)(htmlElement);\n  var missingExpectedValue = arguments.length === 1;\n  var pass = false;\n  if (missingExpectedValue) {\n    // When called without an expected value we only want to validate that the element has an\n    // accessible name, whatever it may be.\n    pass = actualAccessibleName !== '';\n  } else {\n    pass = expectedAccessibleName instanceof RegExp ? expectedAccessibleName.test(actualAccessibleName) : this.equals(actualAccessibleName, expectedAccessibleName);\n  }\n  return {\n    pass: pass,\n    message: function message() {\n      var to = _this.isNot ? 'not to' : 'to';\n      return (0, _utils.getMessage)(_this, _this.utils.matcherHint(\"\".concat(_this.isNot ? '.not' : '', \".\").concat(toHaveAccessibleName.name), 'element', ''), \"Expected element \".concat(to, \" have accessible name\"), expectedAccessibleName, 'Received', actualAccessibleName);\n    }\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","toHaveAccessibleName","_domAccessibilityApi","require","_utils","htmlElement","expectedAccessibleName","_this","checkHtmlElement","actualAccessibleName","computeAccessibleName","missingExpectedValue","arguments","length","pass","RegExp","test","equals","message","to","isNot","getMessage","utils","matcherHint","concat","name"],"sources":["/Users/jihyun/Desktop/IdeaProjects/Kumoh-CodeReviewCommunity/src/main/frontend/node_modules/@testing-library/jest-dom/dist/to-have-accessible-name.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHaveAccessibleName = toHaveAccessibleName;\nvar _domAccessibilityApi = require(\"dom-accessibility-api\");\nvar _utils = require(\"./utils\");\nfunction toHaveAccessibleName(htmlElement, expectedAccessibleName) {\n  (0, _utils.checkHtmlElement)(htmlElement, toHaveAccessibleName, this);\n  const actualAccessibleName = (0, _domAccessibilityApi.computeAccessibleName)(htmlElement);\n  const missingExpectedValue = arguments.length === 1;\n  let pass = false;\n  if (missingExpectedValue) {\n    // When called without an expected value we only want to validate that the element has an\n    // accessible name, whatever it may be.\n    pass = actualAccessibleName !== '';\n  } else {\n    pass = expectedAccessibleName instanceof RegExp ? expectedAccessibleName.test(actualAccessibleName) : this.equals(actualAccessibleName, expectedAccessibleName);\n  }\n  return {\n    pass,\n    message: () => {\n      const to = this.isNot ? 'not to' : 'to';\n      return (0, _utils.getMessage)(this, this.utils.matcherHint(`${this.isNot ? '.not' : ''}.${toHaveAccessibleName.name}`, 'element', ''), `Expected element ${to} have accessible name`, expectedAccessibleName, 'Received', actualAccessibleName);\n    }\n  };\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,oBAAoB,GAAGA,oBAAoB;AACnD,IAAIC,oBAAoB,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAC3D,IAAIC,MAAM,GAAGD,OAAO,CAAC,SAAS,CAAC;AAC/B,SAASF,oBAAoBA,CAACI,WAAW,EAAEC,sBAAsB,EAAE;EAAA,IAAAC,KAAA;EACjE,CAAC,CAAC,EAAEH,MAAM,CAACI,gBAAgB,EAAEH,WAAW,EAAEJ,oBAAoB,EAAE,IAAI,CAAC;EACrE,IAAMQ,oBAAoB,GAAG,CAAC,CAAC,EAAEP,oBAAoB,CAACQ,qBAAqB,EAAEL,WAAW,CAAC;EACzF,IAAMM,oBAAoB,GAAGC,SAAS,CAACC,MAAM,KAAK,CAAC;EACnD,IAAIC,IAAI,GAAG,KAAK;EAChB,IAAIH,oBAAoB,EAAE;IACxB;IACA;IACAG,IAAI,GAAGL,oBAAoB,KAAK,EAAE;EACpC,CAAC,MAAM;IACLK,IAAI,GAAGR,sBAAsB,YAAYS,MAAM,GAAGT,sBAAsB,CAACU,IAAI,CAACP,oBAAoB,CAAC,GAAG,IAAI,CAACQ,MAAM,CAACR,oBAAoB,EAAEH,sBAAsB,CAAC;EACjK;EACA,OAAO;IACLQ,IAAI,EAAJA,IAAI;IACJI,OAAO,EAAE,SAAAA,QAAA,EAAM;MACb,IAAMC,EAAE,GAAGZ,KAAI,CAACa,KAAK,GAAG,QAAQ,GAAG,IAAI;MACvC,OAAO,CAAC,CAAC,EAAEhB,MAAM,CAACiB,UAAU,EAAEd,KAAI,EAAEA,KAAI,CAACe,KAAK,CAACC,WAAW,IAAAC,MAAA,CAAIjB,KAAI,CAACa,KAAK,GAAG,MAAM,GAAG,EAAE,OAAAI,MAAA,CAAIvB,oBAAoB,CAACwB,IAAI,GAAI,SAAS,EAAE,EAAE,CAAC,sBAAAD,MAAA,CAAsBL,EAAE,4BAAyBb,sBAAsB,EAAE,UAAU,EAAEG,oBAAoB,CAAC;IACjP;EACF,CAAC;AACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}