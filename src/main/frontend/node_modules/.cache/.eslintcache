[{"/Users/jihyun/Desktop/IdeaProjects/Kumoh-CodeReviewCommunity/src/main/frontend/src/index.js":"1","/Users/jihyun/Desktop/IdeaProjects/Kumoh-CodeReviewCommunity/src/main/frontend/src/reportWebVitals.js":"2","/Users/jihyun/Desktop/IdeaProjects/Kumoh-CodeReviewCommunity/src/main/frontend/src/App.js":"3","/Users/jihyun/Desktop/IdeaProjects/Kumoh-CodeReviewCommunity/src/main/frontend/src/QnA/Header.js":"4","/Users/jihyun/Desktop/IdeaProjects/Kumoh-CodeReviewCommunity/src/main/frontend/src/QnA/Notice.js":"5","/Users/jihyun/Desktop/IdeaProjects/Kumoh-CodeReviewCommunity/src/main/frontend/src/QnA/Sidebar.js":"6","/Users/jihyun/Desktop/IdeaProjects/Kumoh-CodeReviewCommunity/src/main/frontend/src/QnA/Pagination.js":"7"},{"size":430,"mtime":1697519087584,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1697458751631,"results":"10","hashOfConfig":"9"},{"size":166,"mtime":1697460635116,"results":"11","hashOfConfig":"9"},{"size":284,"mtime":1697448454000,"results":"12","hashOfConfig":"9"},{"size":2784,"mtime":1697448096000,"results":"13","hashOfConfig":"9"},{"size":333,"mtime":1697445420000,"results":"14","hashOfConfig":"9"},{"size":766,"mtime":1697441836000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6y4c0u",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"/Users/jihyun/Desktop/IdeaProjects/Kumoh-CodeReviewCommunity/src/main/frontend/src/index.js",[],[],"/Users/jihyun/Desktop/IdeaProjects/Kumoh-CodeReviewCommunity/src/main/frontend/src/reportWebVitals.js",[],[],["40"],"/Users/jihyun/Desktop/IdeaProjects/Kumoh-CodeReviewCommunity/src/main/frontend/src/App.js",[],[],"/Users/jihyun/Desktop/IdeaProjects/Kumoh-CodeReviewCommunity/src/main/frontend/src/QnA/Header.js",[],[],"/Users/jihyun/Desktop/IdeaProjects/Kumoh-CodeReviewCommunity/src/main/frontend/src/QnA/Notice.js",["41","42"],[],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Pagination from './Pagination';\r\n\r\n\r\nconst Notice = (props) => {\r\n\r\n   const [posts, setPosts] = useState([]);\r\n   const [currentPage, setCurrentPage] = useState(1);\r\n   const [postsPerPage] = useState(10);\r\n\r\n   const indexOfLastPost = currentPage * postsPerPage;\r\n   const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n   const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n   const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n   return (\r\n      <div className=\"container\" style={{ fontFamily: 'Noto Sans Korean,Malgun Gothic,sans-serif' }}>\r\n\t\t <div className=\"lf-menu-nav\"><span>공지사항</span></div>\r\n         <div className=\"lf-contents pd12\">\r\n         <div className=\"top-controls\">\r\n             <a href=\"/noticewrite\"><button className=\"lf-button primary float-right\">글쓰기</button></a>\r\n         </div>\r\n            <div style={{ padding: \"0 12px\" }}>\r\n               <table className=\"board_list text-center\">\r\n                  <colgroup>\r\n                     <col width=\"5%\" />\r\n                     <col width=\"*\" />\r\n                     <col width=\"50%\" />\r\n                     <col width=\"*\" />\r\n                     <col width=\"*\" />\r\n                     <col width=\"*\" />\r\n                     <col width=\"*\" />\r\n                  </colgroup>\r\n                  <thead>\r\n                     <tr>\r\n                        <th>번호</th>\r\n                        <th>구분</th>\r\n                        <th>제목</th>\r\n                        <th>작성자</th>\r\n                        <th>작성일시</th>\r\n                        <th>조회수</th>\r\n                        <th>첨부</th>\r\n                     </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                     {currentPosts.map(post => (\r\n                        <tr key={post._id}>\r\n                           <td>{post._id}</td>\r\n                           <td>{post.type}</td>\r\n                           <td className=\"text-left\"><Link className=\"text-ellipsis\" to={{ pathname: '/Detail', state: { _id: post._id } }} style={{ color: '#909090' }}>{post.title}</Link></td>\r\n                           <td>{post.userName}</td>\r\n                           <td>{post.readCount}</td>\r\n                           <td>\r\n                              \r\n                           </td>\r\n                        </tr>\r\n                     ))}\r\n                  </tbody>\r\n\r\n               </table>\r\n            </div>\r\n\r\n            <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} currentPage={currentPage} paginate={paginate}></Pagination>\r\n         </div>\r\n      </div>\r\n   )\r\n};\r\n\r\n\r\nexport default Notice;","/Users/jihyun/Desktop/IdeaProjects/Kumoh-CodeReviewCommunity/src/main/frontend/src/QnA/Sidebar.js",[],[],"/Users/jihyun/Desktop/IdeaProjects/Kumoh-CodeReviewCommunity/src/main/frontend/src/QnA/Pagination.js",["43","44"],[],"import React from 'react'\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, currentPage, paginate }) => {\r\nconst pageNumbers = [];\r\n\r\nfor(let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n}\r\n\r\n    return (\r\n        <nav>\r\n            <ul className=\"pagination justify-content-center\">\r\n                {pageNumbers.map(number => (\r\n                    <li key={number} className=\"page-item\">\r\n                        <a onClick={() => paginate(number)} className=\"page-link\" style={currentPage == number ? {color: '#17a2b8'} : null}>\r\n                            {number}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Pagination",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":27,"nodeType":"49","messageId":"50","endLine":1,"endColumn":36},{"ruleId":"47","severity":1,"message":"51","line":8,"column":18,"nodeType":"49","messageId":"50","endLine":8,"endColumn":26},{"ruleId":"52","severity":1,"message":"53","line":15,"column":25,"nodeType":"54","endLine":15,"endColumn":141},{"ruleId":"55","severity":1,"message":"56","line":15,"column":102,"nodeType":"57","messageId":"58","endLine":15,"endColumn":104},"no-new-object",["59"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setPosts' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-object-constructor"]